/**************************************************
LEADTOOLS (C) 1991-2017 LEAD Technologies, Inc. ALL RIGHTS RESERVED.
This software is protected by United States and International copyright laws.
Any copying, duplication, deployment, redistribution, modification or other
disposition hereof is STRICTLY PROHIBITED without an express written license
granted by LEAD Technologies, Inc.. This notice may not be removed or otherwise
altered under any circumstances.
Portions of this product are licensed under US patent 5,327,254 and foreign
counterparts.
For more information, contact LEAD Technologies, Inc. at 704-332-5532 or visit
https://www.leadtools.com
**************************************************/
// Leadtools.ImageProcessing.Effects.js
// Version:20.0.0.1
onmessage=function(b){Leadtools_ImageProcessing_Effects_Main(b)};var _callback=null;
Leadtools_ImageProcessing_Effects_Main=function(b){if(!b)throw Error("'eventIn' must not be null");var a=b;b.data?(a=b.data,_callback=postMessage):_callback=a.callback;if(!a.imageData)throw Error("'imageData' must not be null");if(!_callback)throw Error("'callback' must not be null");if(void 0==a.imageData.width||void 0==a.imageData.height)a.imageData.width=a.width,a.imageData.height=a.height;switch(a.command){case "GaussianFilter":Leadtools_ImageProcessing_Effects_GaussianFilter(a);break;case "UnsharpMask":Leadtools_ImageProcessing_Effects_UnsharpMask(a);
break;case "SmoothEdges":Leadtools_ImageProcessing_Effects_SmoothEdges(a);break;case "SpatialFilter":Leadtools_ImageProcessing_Effects_SpatialFilter(a);break;case "Emboss":Leadtools_ImageProcessing_Effects_Emboss(a);break;case "Sharpen":Leadtools_ImageProcessing_Effects_Sharpen(a);break;case "BinaryFilter":Leadtools_ImageProcessing_Effects_BinaryFilter(a);break;case "AntiAliasing":Leadtools_ImageProcessing_Effects_AntiAliasing(a);break;case "GetFunctionalLookupTable":Leadtools_ImageProcessing_Effects_GetFunctionalLookupTable(a);
break;default:throw Error("Unrecognized image processing command: "+a.command);}};var _perspective="TOP_LEFT",_progressData=null;
function increaseProgress(){null==_progressData.value&&(_progressData.value=_progressData.start,_progressData.count=0);_progressData.count++;var b=_progressData.start+(_progressData.end-_progressData.start)*(_progressData.count/_progressData.resultImageHeight);return parseInt(b)>_progressData.value&&(_progressData.value=parseInt(b),b={status:"Progress",percentage:_progressData.value},_progressData.value==_progressData.end&&(_progressData.value=null),_callback(b),b.abort)?!0:!1}
Leadtools_ImageProcessing_Effects_GetFunctionalLookupTable=function(b){var a=b.imageData,c=b.lookupTable;L_IntGetFunctionalLookupTable(c,c.length,b.start,b.end,b.factor,b.flags);_callback&&_callback({status:"Completed",imageData:a,lookupTable:c})};
function L_IntGetFunctionalLookupTable(b,a,c,d,e,h){if(c>d||!b)throw Error("ERROR_INV_PARAMETER");if(d-c>a)throw Error("ERROR_INV_PARAMETER");if(!(h&16)&&(0>c||0>d))throw Error("ERROR_INV_PARAMETER");if(h&16&&0>d&&0>d+a)throw Error("ERROR_INV_PARAMETER");0==e&&2!=(h&15)&&(h=h&65520|2);switch(h&15){case 0:GetExpLookupTable(b,a,c,d,e,h);break;case 1:if(0>e)throw Error("ERROR_INV_PARAMETER");GetLnLookupTable(b,a,c,d,e,h);break;case 2:GetLinearLookupTable(b,a,c,d,h);break;case 3:GetSigmoidLookupTable(b,
a,c,d,e,h);break;default:throw Error("ERROR_INV_PARAMETER");}}function GetSigmoidLookupTable(b,a,c,d,e,h){var g,i,f,k,j,m,l;k=(d+c)/2;j=e/10;i=d-c;e=1/(1+Math.exp(2*j*(c-k)/i));g=1/(1+Math.exp(2*j*(d-k)/i));m=0>c?b[c+a]:b[c];l=0>d?b[d+a]:b[d];if(h&16)for(;c<=d;c++)h=c,0>c&&(h=c+a),f=1/(1+Math.exp(2*j*(c-k)/i)),f=Math.min(a-1,m+parseInt((l-m)*(f-e)/(g-e))),b[h]=f;else for(;c<=d;c++)f=1/(1+Math.exp(2*j*(c-k)/i)),b[c]=Math.max(0,Math.min(a-1,m+parseInt((l-m)*(f-e)/(g-e))))}
function GetLinearLookupTable(b,a,c,d,e){var h,g,i,f;h=0>c?b[c+a]:b[c];g=((0>d?b[d+a]:b[d])-h)/(d-c);if(e&16){e=0;for(i=c;e<=d-c;e++,i++)f=i,0>i&&(f=i+a),b[f]=parseInt(g*e+h)}else{e=0;for(i=c;e<=d-c;e++,i++)b[i]=Math.min(a-1,Math.max(0,parseInt(g*e+h)))}}
function GetLnLookupTable(b,a,c,d,e,h){var g,i,f,k,j;i=e/10;e=Math.log(1+i);k=0>c?b[c+a]:b[c];j=0>d?b[d+a]:b[d];if(h&16)for(h=c;h<=d;h++)f=h,0>h&&(f=h+a),g=Math.log(1+i*(h-c)/(d-c)),g=Math.min(a-1,k+parseInt((j-k)*(g-0)/(e-0))),b[f]=g;else for(h=c;h<=d;h++)g=Math.log(1+i*(h-c)/(d-c)),b[h]=Math.max(0,Math.min(a-1,k+parseInt((j-k)*(g-0)/(e-0))))}
function GetExpLookupTable(b,a,c,d,e,h){var g,i,f,k,j;i=e/10;e=Math.exp(i);k=0>c?b[c+a]:b[c];j=0>d?b[d+a]:b[d];if(h&16)for(h=c;h<=d;h++)f=h,0>h&&(f=h+a),g=Math.exp(i*(h-c)/(d-c)),g=k+parseInt((j-k)*(g-1)/(e-1)),b[f]=g;else for(h=c;h<=d;h++)g=Math.exp(i*(h-c)/(d-c)),b[h]=Math.max(0,Math.min(a-1,k+parseInt((j-k)*(g-1)/(e-1))))}
Leadtools_ImageProcessing_Effects_AntiAliasing=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=b.threshold,d=b.dimension,b=b.antiAliasingType;if(0>c)throw Error("ERROR_INV_PARAMETER");if(0>d)throw Error("ERROR_INV_PARAMETER");L_AntiAliasBitmap(a,c,d,b);_callback&&_callback({status:"Completed",imageData:a})};function L_AntiAliasBitmap(b,a,c,d){AntiAliasBitmap(b,a,c,d)}
function AntiAliasBitmap(b,a,c,d){switch(c){case 0:throw Error("ERROR_INV_PARAMETER");case 1:break;case 3:L_Anti3x3Filter(b,a,d);break;default:L_AntiNxNFilter(b,a,c,d)}}
function L_AntiNxNFilter(b,a,c,d){var e,h,g,i=h=null,f=null,k=e=null,j=null,m,l,o={};o.data=L_AllocateUint8Array(4*b.width*b.height);o.width=b.width;o.height=b.height;var n={};n.data=L_AllocateUint8Array(4*b.width*b.height);n.width=b.width;n.height=b.height;var p,q,r,t={};l=L_GetPredefinedAntiAliasFilter(d);m=L_GetWidth(b);g=L_GetHeight(b);d=g-1;p=parseInt(c/2);L_CopyBitmap(o,b);L_CopyBitmap(n,b);L_AverageFilterBitmap(n,c);if(255<a)throw Error("ERROR_INV_RANGE");e=3*L_GetWidth(b)+12;k=Array(c);j=
Array(c);for(h=0;h<c;h++)k[h]=L_AllocateUint8Array(e);for(h=0;h<c;h++)j[h]=L_AllocateUint8Array(e);i=L_AllocateUint8Array(e);f=L_AllocateUint8Array(e);e=L_AllocateUint8Array(e);t.left=0;t.top=0;t.right=m;t.bottom=g;L_ImageProcessGet(o,i,Math.max(0,t.top-1));L_ImageProcessGet(o,f,t.top);for(g=t.top;g<t.bottom;g++){L_ImageProcessGet(o,e,Math.min(g+1,d));q=g-p;for(h=0;h<c;h++)L_ImageProcessGet(b,k[h],Math.min(d,Math.max(q+h,0)));for(h=0;h<c;h++)L_ImageProcessGet(n,j[h],Math.min(d,Math.max(q+h,0)));AddLineAntiNxN8(i,
f,e,j,k,c,l,m,3,t,a);for(h=0;h<c;h++)r=q+h,0<=r&&r<=d&&(r==g?L_ImageProcessPut(b,k[h],r):L_ImageProcessPutNoInc(b,k[h],r));h=i;i=f;f=e;e=h}}function L_AverageFilterBitmap(b,a){L_IntAverageFilterBitmap(b,a)}
function L_IntAverageFilterBitmap(b,a){var c=Array(3),d,e,h=null,g,i,f,k,j,m,l,o,n,p,q,r,t,s={};if(!a)throw Error("ERROR_INV_PARAMETER");L_MEMSET(c,0,3);g=a*a;l=a-1>>1;o=(a>>1)+1;h=L_AllocateUint8Array(3*L_GetWidth(b)+12);d=a+1;for(i=0;3>i;i++)c[i]=Array(d);d=L_GetWidth(b);for(i=0;3>i;i++)for(f=0;f<=a;f++)c[i][f]=L_AllocateUint32ArrayInit(d);s.left=0;s.top=0;s.right=L_GetWidth(b);s.bottom=L_GetHeight(b);p=-1;t=L_GetHeight(b)-1;L_GetWidth(b);q=r=0;j=m=s.top-l;n=0>j?0:j;for(k=s.top;k<s.bottom;){n>p&&
(L_ImageProcessGet(b,h,n),p=n,AddLines8AverageFilter(b,c,h,3,r,l,o,s));for(i=0;3>i;i++){d=c[i][r];e=c[i][a];for(f=s.left;f<s.right;f++)e[f]+=d[f]}0<=m&&m<t&&(n++,++r>=a&&(r=0));m++;if(m>=o+s.top){AverageLines8AverageFilter(c,h,3,a,g,s);L_ImageProcessPutNoInc(b,h,k);k++;for(i=0;3>i;i++){d=c[i][q];e=c[i][a];for(f=s.left;f<s.right;f++)e[f]-=d[f]}0<=j&&j<t&&++q>=a&&(q=0);j++}}}
function AverageLines8AverageFilter(b,a,c,d,e,h){var g,i,f,k;for(k=0;k<c;k++){i=k+h.left*c;g=b[k][d];for(f=h.left;f<h.right;f++)a[i]=Math.max(0,Math.min(255,parseInt(g[f]/e))),i+=c}}function AddLines8AverageFilter(b,a,c,d,e,h,g,i){var f,k,j,m,l,o,n=L_GetWidth(b)-1;for(nCmp=0;nCmp<d;nCmp++){b=a[nCmp][e];j=0;f=nCmp;l=o=i.left-h;f=0<=l?k=f+l*d:k=f;for(m=i.left;m<i.right;)j+=c[k],0<=o&&o<n&&(k+=d),o++,o>=g+i.left&&(b[m]=j,m++,j-=c[f],0<=l&&l<n&&(f+=d),l++)}}
function AddLineAntiNxN8(b,a,c,d,e,h,g,i,f,k,j){var m,l,o,n,p,q,r,t,s,u,z,w,C,A,x,y,v,B,D,E,F,G;D=parseInt(h/2);G=F=E=0;s=k.left*f;m=2+s;l=2+s;o=2+s;n=1+s;p=1+s;q=1+s;t=r=s;v=k.left?-3:0;B=3;y=i-1;for(x=k.left;x<k.right;){u=g.fltMatrix[0]*b[m+v]+g.fltMatrix[1]*b[m+0]+g.fltMatrix[2]*b[m+B]+g.fltMatrix[3]*a[l+v]+g.fltMatrix[4]*a[l+0]+g.fltMatrix[5]*a[l+B]+g.fltMatrix[6]*c[o+v]+g.fltMatrix[7]*c[o+0]+g.fltMatrix[8]*c[o+B];i=g.fltMatrix[0]*b[n+v]+g.fltMatrix[1]*b[n+0]+g.fltMatrix[2]*b[n+B]+g.fltMatrix[3]*
a[p+v]+g.fltMatrix[4]*a[p+0]+g.fltMatrix[5]*a[p+B]+g.fltMatrix[6]*c[q+v]+g.fltMatrix[7]*c[q+0]+g.fltMatrix[8]*c[q+B];z=g.fltMatrix[0]*b[r+v]+g.fltMatrix[1]*b[r+0]+g.fltMatrix[2]*b[r+B]+g.fltMatrix[3]*a[t+v]+g.fltMatrix[4]*a[t+0]+g.fltMatrix[5]*a[t+B]+g.fltMatrix[6]*c[s+v]+g.fltMatrix[7]*c[s+0]+g.fltMatrix[8]*c[s+B];if(parseInt(u/g.fltDivisor)>j){C=(Math.max(0,x-D)+E)*f+2;A=Math.min(y,x+D)*f+2;for(u=0;u<h;u++)for(w=C;w<=A;w+=f)e[u][w]=d[u][w];E=h-1}else 0<E&&E--;if(parseInt(i/g.fltDivisor)>j){C=(Math.max(0,
x-D)+F)*f+1;A=Math.min(y,x+D)*f+1;for(u=0;u<h;u++)for(w=C;w<=A;w+=f)e[u][w]=d[u][w];F=h-1}else 0<F&&F--;if(parseInt(z/g.fltDivisor)>j){C=(Math.max(0,x-D)+G)*f;A=Math.min(y,x+D)*f;for(u=0;u<h;u++)for(w=C;w<=A;w+=f)e[u][w]=d[u][w];G=h-1}else 0<G&&G--;0!=x&&(v=-3);m+=3;l+=3;o+=3;n+=3;p+=3;q+=3;r+=3;t+=3;s+=3;x++;x>=y&&(B=0)}}
function L_Anti3x3Filter(b,a,c){var d,e,h,g=null,i=null,f=null,k=null,j=d=null,m=null,l=null,o,n,p={};p.data=L_AllocateUint8Array(4*b.width*b.height);p.width=b.width;p.height=b.height;var q={};n=L_GetPredefinedAntiAliasFilter(c);o=L_GetWidth(b);g=L_GetHeight(b);c=g-1;q.left=0;q.top=0;q.right=o;q.bottom=g;L_CopyBitmap(p,b);if(255<a)throw Error("ERROR_INV_RANGE");d=3*L_GetWidth(b)+12;j=L_AllocateUint8Array(d);m=L_AllocateUint8Array(d);l=L_AllocateUint8Array(d);g=L_AllocateUint8Array(d);i=L_AllocateUint8Array(d);
f=L_AllocateUint8Array(d);k=L_AllocateUint8Array(d);d=L_AllocateUint8Array(d);L_ImageProcessGet(p,g,Math.max(0,q.top-2));L_ImageProcessGet(p,i,Math.max(0,q.top-1));L_ImageProcessGet(p,f,q.top);L_ImageProcessGet(p,k,Math.min(c,q.top+1));for(e=q.top;e<q.bottom;e++)L_ImageProcessGet(p,d,Math.min(e+2,c)),L_ImageProcessGet(b,j,Math.max(e-1,0)),L_ImageProcessGet(b,m,e),L_ImageProcessGet(p,l,Math.min(e+1,c)),AddLineAnti3x38(g,i,f,k,d,j,m,l,n,o,3,q,a),0<e&&L_ImageProcessPutNoInc(b,j,e-1),L_ImageProcessPut(b,
m,e),e<c&&L_ImageProcessPutNoInc(b,l,e+1),h=g,g=i,i=f,f=k,k=d,d=h}
function L_GetPredefinedAntiAliasFilter(b){var a={};switch(b){case 0:a.fltDivisor=4;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=-1;a.fltMatrix[2]=0;a.fltMatrix[3]=-1;a.fltMatrix[4]=4;a.fltMatrix[5]=-1;a.fltMatrix[6]=0;a.fltMatrix[7]=-1;a.fltMatrix[8]=0;break;case 1:a.fltDivisor=4;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=-1;a.fltMatrix[4]=
8;a.fltMatrix[5]=-1;a.fltMatrix[6]=-1;a.fltMatrix[7]=-1;a.fltMatrix[8]=-1;break;case 2:a.fltDivisor=4;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=-2;a.fltMatrix[2]=1;a.fltMatrix[3]=-2;a.fltMatrix[4]=4;a.fltMatrix[5]=-2;a.fltMatrix[6]=1;a.fltMatrix[7]=-2;a.fltMatrix[8]=1;break;case 3:a.fltDivisor=4;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=0;a.fltMatrix[2]=-1;a.fltMatrix[3]=
0;a.fltMatrix[4]=4;a.fltMatrix[5]=0;a.fltMatrix[6]=-1;a.fltMatrix[7]=0;a.fltMatrix[8]=-1;break;case 4:a.fltDivisor=2;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=-1;a.fltMatrix[2]=0;a.fltMatrix[3]=0;a.fltMatrix[4]=2;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=-1;a.fltMatrix[8]=0;break;case 5:a.fltDivisor=2;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=
0;a.fltMatrix[3]=-1;a.fltMatrix[4]=2;a.fltMatrix[5]=-1;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;default:throw Error("Unrecognized Predefined AntiAliasing Type");}return a}
function AddLineAnti3x38(b,a,c,d,e,h,g,i,f,k,j,m,l){var o,n,p,q,r,t,s,u,z,w,C,A,x,y,v,B;z=m.left*j;o=2+z;n=2+z;p=2+z;q=1+z;r=1+z;t=1+z;u=s=z;y=m.left?-3:0;v=3;x=k-1;for(A=m.left;A<m.right;)B=A*j,k=f.fltMatrix[0]*a[o+y]+f.fltMatrix[1]*a[o+0]+f.fltMatrix[2]*a[o+v]+f.fltMatrix[3]*c[n+y]+f.fltMatrix[4]*c[n+0]+f.fltMatrix[5]*c[n+v]+f.fltMatrix[6]*d[p+y]+f.fltMatrix[7]*d[p+0]+f.fltMatrix[8]*d[p+v],w=f.fltMatrix[0]*a[q+y]+f.fltMatrix[1]*a[q+0]+f.fltMatrix[2]*a[q+v]+f.fltMatrix[3]*c[r+y]+f.fltMatrix[4]*c[r+
0]+f.fltMatrix[5]*c[r+v]+f.fltMatrix[6]*d[t+y]+f.fltMatrix[7]*d[t+0]+f.fltMatrix[8]*d[t+v],C=f.fltMatrix[0]*a[s+y]+f.fltMatrix[1]*a[s+0]+f.fltMatrix[2]*a[s+v]+f.fltMatrix[3]*c[u+y]+f.fltMatrix[4]*c[u+0]+f.fltMatrix[5]*c[u+v]+f.fltMatrix[6]*d[z+y]+f.fltMatrix[7]*d[z+0]+f.fltMatrix[8]*d[z+v],parseInt(k/f.fltDivisor)>l&&AverageAnti3x38(b,a,c,d,e,h,g,i,B,j,2,A,x),parseInt(w/f.fltDivisor)>l&&AverageAnti3x38(b,a,c,d,e,h,g,i,B,j,1,A,x),parseInt(C/f.fltDivisor)>l&&AverageAnti3x38(b,a,c,d,e,h,g,i,B,j,0,A,
x),A&&(y=-3),o+=3,n+=3,p+=3,q+=3,r+=3,t+=3,s+=3,u+=3,z+=3,A++,A>=x&&(v=0)}
function AverageAnti3x38(b,a,c,d,e,h,g,i,f,k,j,m,l){var o,n,p,q,r;0==m?(l=m=j,f=k+j,n=o=j,p=f,q=f-k,r=f+k):1==m?(m=f+j,l=f-k+j,f=f+k+j,n=o=l,j=l+k,p=f,q=f-k,r=f+k):m==l-1?(m=f+j,l=f-k+j,f=f+k+j,o=l,n=l-k,j=l+k,p=f,q=f-k,r=f):m==l?(m=f+j,l=f-k+j,f=m,o=l,n=l-k,j=l+k,r=q=p=m):(m=f+j,l=f-k+j,f=f+k+j,o=l,n=l-k,j=l+k,p=f,q=f-k,r=f+k);k=b[n]+b[o]+b[j]+a[n]+a[o]+a[j]+c[n]+c[o]+c[j];h[o]=parseInt(k/9);k+=b[f]+a[f]+c[f]-(b[n]+a[n]+c[n]);h[m]=parseInt(k/9);k+=b[r]+a[r]+c[r]-(b[l]+a[l]+c[l]);h[p]=parseInt(k/
9);k=k-(b[q]+b[p]+b[r])+(d[q]+d[p]+d[r]);g[p]=parseInt(k/9);k=k+(a[l]+c[l]+d[l])-(a[r]+c[r]+d[r]);g[m]=parseInt(k/9);k=k+(a[n]+c[n]+d[n])-(a[f]+c[f]+d[f]);g[o]=parseInt(k/9);k=k+(e[n]+e[o]+e[j])-(a[n]+a[o]+a[j]);i[o]=parseInt(k/9);k=k+(c[f]+d[f]+e[f])-(c[n]+d[n]+e[n]);i[m]=parseInt(k/9);k=k+(c[r]+d[r]+e[r])-(c[l]+d[l]+e[l]);i[p]=parseInt(k/9)}
Leadtools_ImageProcessing_Effects_BinaryFilter=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=null;void 0!=b.predefined?c=L_GetPredefinedBinaryFilter(b.predefined):(c={},c.bfltMax=b.maximum,null==b.matrix||0==b.matrix.length?(c.bfltDim=0,c.bfltMatrix=null):(c.bfltDim=parseInt(Math.sqrt(b.matrix.length)),c.bfltMatrix=L_AllocateInt32ArrayInit(c.bfltDim*c.bfltDim),L_CopyArray(b.matrix,c.bfltMatrix,
c.bfltDim*c.bfltDim)));L_BinaryFilterBitmap(a,c);_callback&&_callback({status:"Completed",imageData:a,dimension:c.bfltDim})};
function L_GetPredefinedBinaryFilter(b){var a={};switch(b){case 0:a.bfltMax=!0;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=0;a.bfltMatrix[1]=0;a.bfltMatrix[2]=0;a.bfltMatrix[3]=0;a.bfltMatrix[4]=0;a.bfltMatrix[5]=0;a.bfltMatrix[6]=0;a.bfltMatrix[7]=0;a.bfltMatrix[8]=0;break;case 1:a.bfltMax=!0;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=256;a.bfltMatrix[1]=256;a.bfltMatrix[2]=256;a.bfltMatrix[3]=0;a.bfltMatrix[4]=
0;a.bfltMatrix[5]=0;a.bfltMatrix[6]=256;a.bfltMatrix[7]=256;a.bfltMatrix[8]=256;break;case 2:a.bfltMax=!0;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=256;a.bfltMatrix[1]=0;a.bfltMatrix[2]=256;a.bfltMatrix[3]=256;a.bfltMatrix[4]=0;a.bfltMatrix[5]=256;a.bfltMatrix[6]=256;a.bfltMatrix[7]=0;a.bfltMatrix[8]=256;break;case 3:a.bfltMax=!0;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=0;a.bfltMatrix[1]=256;a.bfltMatrix[2]=
0;a.bfltMatrix[3]=256;a.bfltMatrix[4]=0;a.bfltMatrix[5]=256;a.bfltMatrix[6]=0;a.bfltMatrix[7]=256;a.bfltMatrix[8]=0;break;case 4:a.bfltMax=!1;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=0;a.bfltMatrix[1]=0;a.bfltMatrix[2]=0;a.bfltMatrix[3]=0;a.bfltMatrix[4]=0;a.bfltMatrix[5]=0;a.bfltMatrix[6]=0;a.bfltMatrix[7]=0;a.bfltMatrix[8]=0;break;case 5:a.bfltMax=!1;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=256;a.bfltMatrix[1]=
256;a.bfltMatrix[2]=256;a.bfltMatrix[3]=0;a.bfltMatrix[4]=0;a.bfltMatrix[5]=0;a.bfltMatrix[6]=256;a.bfltMatrix[7]=256;a.bfltMatrix[8]=256;break;case 6:a.bfltMax=!1;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);a.bfltMatrix[0]=256;a.bfltMatrix[1]=0;a.bfltMatrix[2]=256;a.bfltMatrix[3]=256;a.bfltMatrix[4]=0;a.bfltMatrix[5]=256;a.bfltMatrix[6]=256;a.bfltMatrix[7]=0;a.bfltMatrix[8]=256;break;case 7:a.bfltMax=!1;a.bfltDim=3;a.bfltMatrix=L_AllocateInt32ArrayInit(a.bfltDim*a.bfltDim);
a.bfltMatrix[0]=0;a.bfltMatrix[1]=256;a.bfltMatrix[2]=0;a.bfltMatrix[3]=256;a.bfltMatrix[4]=0;a.bfltMatrix[5]=256;a.bfltMatrix[6]=0;a.bfltMatrix[7]=256;a.bfltMatrix[8]=0;break;default:throw Error("Unrecognized Predefined Binary Filter");}return a}function L_BinaryFilterBitmap(b,a){BinaryFilterBitmap(b,a)}function BinaryFilterBitmap(b,a){3==a.bfltDim?L_BinaryColor3x3FilterBitmap(b,a):L_BinaryColorNxNFilterBitmap(b,a)}
function L_BinaryColor3x3FilterBitmap(b,a){var c,d,e,h=null,g=null,i=null,f=null;c=3*L_GetWidth(b)+6;f=L_AllocateUint8Array(c);h=L_AllocateUint8Array(c);g=L_AllocateUint8Array(c);i=L_AllocateUint8Array(c);for(d=0;d<L_GetHeight(b);d++)0==d&&(GetLine(b,h,L_GetWidth(b),0,3),L_CopyArray(h,g,c)),GetLine(b,i,L_GetWidth(b),Math.min(d+1,L_GetHeight(b)-1),3),a.bfltMax?L_MEMSET(f,0,c):L_MEMSET(f,255,c),Apply3x3BinaryFilter8(L_GetWidth(b),a,f,h,g,i,3,6),L_ImageProcessPut(b,f,d),e=h,h=g,g=i,i=e}
function Apply3x3BinaryFilter8(b,a,c,d,e,h,g,i){var f,k,j,m,l,o;for(f=0;f<g;f++)if(o=l=m=j=f,a.bfltMax)for(k=b;k--;)CalcFilterValueMax8(a.bfltMatrix[0],d[m],c,j),CalcFilterValueMax8(a.bfltMatrix[1],d[m+g],c,j),CalcFilterValueMax8(a.bfltMatrix[2],d[m+i],c,j),CalcFilterValueMax8(a.bfltMatrix[3],e[l],c,j),CalcFilterValueMax8(a.bfltMatrix[4],e[l+g],c,j),CalcFilterValueMax8(a.bfltMatrix[5],e[l+i],c,j),CalcFilterValueMax8(a.bfltMatrix[6],h[o],c,j),CalcFilterValueMax8(a.bfltMatrix[7],h[o+g],c,j),CalcFilterValueMax8(a.bfltMatrix[8],
h[o+i],c,j),m+=g,l+=g,o+=g,j+=g;else for(k=b;k--;)CalcFilterValueMin8(a.bfltMatrix[0],d[m],c,j),CalcFilterValueMin8(a.bfltMatrix[1],d[m+g],c,j),CalcFilterValueMin8(a.bfltMatrix[2],d[m+i],c,j),CalcFilterValueMin8(a.bfltMatrix[3],e[l],c,j),CalcFilterValueMin8(a.bfltMatrix[4],e[l+g],c,j),CalcFilterValueMin8(a.bfltMatrix[5],e[l+i],c,j),CalcFilterValueMin8(a.bfltMatrix[6],h[o],c,j),CalcFilterValueMin8(a.bfltMatrix[7],h[o+g],c,j),CalcFilterValueMin8(a.bfltMatrix[8],h[o+i],c,j),m+=g,l+=g,o+=g,j+=g}
function CalcFilterValueMax8(b,a,c,d){switch(b){case 256:break;case 0:c[d]=Math.max(c[d],a);break;default:c[d]=Math.max(c[d],Math.max(0,Math.min(255,a+b)))}}function CalcFilterValueMin8(b,a,c,d){switch(b){case 256:break;case 0:c[d]=Math.min(c[d],a);break;default:c[d]=Math.min(c[d],Math.max(0,Math.min(255,a+b)))}}
Leadtools_ImageProcessing_Effects_Sharpen=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=b.sharpness,d;if(c){if(-1E3>c||1E3<c)throw Error("ERROR_INV_PARAMETER");b={fltBias:0,fltDim:3};b.fltMatrix=L_AllocateInt32Array(b.fltDim*b.fltDim);if(0>c){d=1+parseInt(71*(1E3+c)/999);for(c=0;9>c;c++)b.fltMatrix[c]=1;b.fltMatrix[4]=d;b.fltDivisor=d+8}else{d=9+parseInt(71*(1E3-c)/999);for(c=0;9>c;c++)b.fltMatrix[c]=
-1;b.fltMatrix[4]=d;b.fltDivisor=d-8}L_SpatialFilterBitmap(a,b);_callback&&_callback({status:"Completed",imageData:a})}else _callback({status:"Completed",imageData:a})};
Leadtools_ImageProcessing_Effects_Emboss=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=b.direction,d=b.depth;if(7<c)throw Error("ERROR_INV_PARAMETER");if(1E3<d)throw Error("ERROR_INV_PARAMETER");b={fltBias:128,fltDim:3};b.fltMatrix=L_AllocateInt32Array(b.fltDim*b.fltDim);500>=d?(b.fltDivisor=1+parseInt((16*(500-d)+250)/500),d=1):(b.fltDivisor=1,d=1+parseInt((16*(d-500)+250)/500));L_MEMSET(b.fltMatrix,
0,9);switch(c){case 0:b.fltMatrix[1]=d;b.fltMatrix[7]=-d;break;case 1:b.fltMatrix[2]=d;b.fltMatrix[6]=-d;break;case 2:b.fltMatrix[5]=d;b.fltMatrix[3]=-d;break;case 3:b.fltMatrix[8]=d;b.fltMatrix[0]=-d;break;case 4:b.fltMatrix[7]=d;b.fltMatrix[1]=-d;break;case 5:b.fltMatrix[6]=d;b.fltMatrix[2]=-d;break;case 6:b.fltMatrix[3]=d;b.fltMatrix[5]=-d;break;case 7:b.fltMatrix[0]=d,b.fltMatrix[8]=-d}L_SpatialFilterBitmap(a,b);_callback&&_callback({status:"Completed",imageData:a})};
Leadtools_ImageProcessing_Effects_SpatialFilter=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=null;void 0!=b.predefined?c=L_GetPredefinedSpatialFilter(b.predefined):(c={},c.fltDivisor=b.divisor,c.fltBias=b.bias,null==b.matrix||0==b.matrix.length?(c.fltDim=0,c.fltMatrix=null):(c.fltDim=parseInt(Math.sqrt(b.matrix.length)),c.fltMatrix=L_AllocateInt32ArrayInit(c.fltDim*c.fltDim),L_CopyArray(b.matrix,
c.fltMatrix,c.fltDim*c.fltDim)));L_SpatialFilterBitmap(a,c);_callback&&_callback({status:"Completed",imageData:a,dimension:c.fltDim})};
function L_GetPredefinedSpatialFilter(b){var a={};switch(b){case 0:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=1;a.fltMatrix[2]=0;a.fltMatrix[3]=0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=-1;a.fltMatrix[8]=0;break;case 1:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=1;a.fltMatrix[3]=0;a.fltMatrix[4]=
0;a.fltMatrix[5]=0;a.fltMatrix[6]=-1;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 2:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=0;a.fltMatrix[3]=-1;a.fltMatrix[4]=0;a.fltMatrix[5]=1;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 3:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=0;a.fltMatrix[2]=0;a.fltMatrix[3]=
0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=1;break;case 4:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=-1;a.fltMatrix[2]=0;a.fltMatrix[3]=0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=1;a.fltMatrix[8]=0;break;case 5:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=
-1;a.fltMatrix[3]=0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=1;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 6:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=0;a.fltMatrix[3]=1;a.fltMatrix[4]=0;a.fltMatrix[5]=-1;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 7:a.fltDivisor=1;a.fltBias=128;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=
0;a.fltMatrix[2]=0;a.fltMatrix[3]=0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=-1;break;case 8:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=1;a.fltMatrix[2]=1;a.fltMatrix[3]=1;a.fltMatrix[4]=-2;a.fltMatrix[5]=1;a.fltMatrix[6]=-1;a.fltMatrix[7]=-1;a.fltMatrix[8]=-1;break;case 9:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=
1;a.fltMatrix[1]=1;a.fltMatrix[2]=1;a.fltMatrix[3]=-1;a.fltMatrix[4]=-2;a.fltMatrix[5]=1;a.fltMatrix[6]=-1;a.fltMatrix[7]=-1;a.fltMatrix[8]=1;break;case 10:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=1;a.fltMatrix[2]=1;a.fltMatrix[3]=-1;a.fltMatrix[4]=-2;a.fltMatrix[5]=1;a.fltMatrix[6]=-1;a.fltMatrix[7]=1;a.fltMatrix[8]=1;break;case 11:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=1;a.fltMatrix[3]=-1;a.fltMatrix[4]=-2;a.fltMatrix[5]=1;a.fltMatrix[6]=1;a.fltMatrix[7]=1;a.fltMatrix[8]=1;break;case 12:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=1;a.fltMatrix[4]=-2;a.fltMatrix[5]=1;a.fltMatrix[6]=1;a.fltMatrix[7]=1;a.fltMatrix[8]=1;break;case 13:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=1;a.fltMatrix[4]=-2;a.fltMatrix[5]=-1;a.fltMatrix[6]=1;a.fltMatrix[7]=1;a.fltMatrix[8]=1;break;case 14:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=1;a.fltMatrix[2]=-1;a.fltMatrix[3]=1;a.fltMatrix[4]=-2;a.fltMatrix[5]=-1;a.fltMatrix[6]=1;a.fltMatrix[7]=1;a.fltMatrix[8]=-1;break;case 15:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=1;a.fltMatrix[2]=1;a.fltMatrix[3]=1;a.fltMatrix[4]=-2;a.fltMatrix[5]=-1;a.fltMatrix[6]=1;a.fltMatrix[7]=-1;a.fltMatrix[8]=-1;break;case 16:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=-1;a.fltMatrix[2]=0;a.fltMatrix[3]=-1;a.fltMatrix[4]=4;a.fltMatrix[5]=-1;a.fltMatrix[6]=0;a.fltMatrix[7]=-1;a.fltMatrix[8]=0;break;case 17:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=-1;a.fltMatrix[4]=8;a.fltMatrix[5]=-1;a.fltMatrix[6]=-1;a.fltMatrix[7]=-1;a.fltMatrix[8]=-1;break;case 18:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=-2;a.fltMatrix[2]=1;a.fltMatrix[3]=-2;a.fltMatrix[4]=4;a.fltMatrix[5]=-2;a.fltMatrix[6]=1;a.fltMatrix[7]=-2;a.fltMatrix[8]=1;break;case 19:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=0;a.fltMatrix[2]=-1;a.fltMatrix[3]=0;a.fltMatrix[4]=4;a.fltMatrix[5]=0;a.fltMatrix[6]=-1;a.fltMatrix[7]=0;a.fltMatrix[8]=-1;break;case 20:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=-1;a.fltMatrix[2]=0;a.fltMatrix[3]=0;a.fltMatrix[4]=2;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=-1;a.fltMatrix[8]=0;break;case 21:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=0;a.fltMatrix[3]=-1;a.fltMatrix[4]=2;a.fltMatrix[5]=-1;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 22:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=2;a.fltMatrix[2]=1;a.fltMatrix[3]=0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=-1;a.fltMatrix[7]=-2;a.fltMatrix[8]=-1;break;case 23:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=0;a.fltMatrix[2]=-1;a.fltMatrix[3]=2;a.fltMatrix[4]=0;a.fltMatrix[5]=-2;a.fltMatrix[6]=1;a.fltMatrix[7]=0;a.fltMatrix[8]=-1;break;case 24:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=0;a.fltMatrix[4]=0;a.fltMatrix[5]=0;a.fltMatrix[6]=1;a.fltMatrix[7]=1;a.fltMatrix[8]=1;break;case 25:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=1;a.fltMatrix[1]=0;a.fltMatrix[2]=-1;a.fltMatrix[3]=1;a.fltMatrix[4]=0;a.fltMatrix[5]=-1;a.fltMatrix[6]=1;a.fltMatrix[7]=0;a.fltMatrix[8]=-1;break;case 26:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=0;a.fltMatrix[2]=0;a.fltMatrix[3]=-0.0;a.fltMatrix[4]=1;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 27:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=-1;a.fltMatrix[2]=0;a.fltMatrix[3]=0;a.fltMatrix[4]=1;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 28:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=0;a.fltMatrix[1]=0;a.fltMatrix[2]=0;a.fltMatrix[3]=-1;a.fltMatrix[4]=1;a.fltMatrix[5]=0;a.fltMatrix[6]=0;a.fltMatrix[7]=0;a.fltMatrix[8]=0;break;case 29:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=2;a.fltMatrix[4]=2;a.fltMatrix[5]=2;a.fltMatrix[6]=-1;a.fltMatrix[7]=-1;a.fltMatrix[8]=-1;break;case 30:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=2;a.fltMatrix[2]=-1;a.fltMatrix[3]=-1;a.fltMatrix[4]=2;a.fltMatrix[5]=-1;a.fltMatrix[6]=-1;a.fltMatrix[7]=2;a.fltMatrix[8]=-1;break;case 31:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*
a.fltDim);a.fltMatrix[0]=-1;a.fltMatrix[1]=-1;a.fltMatrix[2]=2;a.fltMatrix[3]=-1;a.fltMatrix[4]=2;a.fltMatrix[5]=-1;a.fltMatrix[6]=2;a.fltMatrix[7]=-1;a.fltMatrix[8]=-1;break;case 32:a.fltDivisor=1;a.fltBias=0;a.fltDim=3;a.fltMatrix=L_AllocateInt32ArrayInit(a.fltDim*a.fltDim);a.fltMatrix[0]=2;a.fltMatrix[1]=-1;a.fltMatrix[2]=-1;a.fltMatrix[3]=-1;a.fltMatrix[4]=2;a.fltMatrix[5]=-1;a.fltMatrix[6]=-1;a.fltMatrix[7]=-1;a.fltMatrix[8]=2;break;default:throw Error("Unrecognized Predefined Spatial Filter");
}return a}function L_SpatialFilterBitmap(b,a){3==a.fltDim?L_Spatial3x3FilterBitmap(b,a):L_SpatialNxNFilterBitmap(b,a)}
function L_SpatialNxNFilterBitmap(b,a){var c,d=0,e,h,g,i,f=null,k=null,j=null,m,l,o,n,p,q,r,t,s;i=a.fltDim;if(!i||!a.fltDivisor)throw Error("ERROR INV PARAMETER");d=3;h=i-1>>1;g=(i>>1)+1;k=Array(3);for(c=0;c<d;c++)k[c]=L_AllocateInt32Array(L_GetWidth(b));m=L_GetWidth(b)*d;f=L_AllocateUint8Array(m);j=Array(i);for(e=0;e<i;e++)j[e]=L_AllocateUint8Array(m);o=-1;q=n=0;t=L_GetHeight(b)-1;r=L_GetWidth(b)-1;s=a.fltMatrix;for(e=0;e<L_GetHeight(b);e++){for(c=m=0;c<d;c++)L_MEMSET(k[c],0,L_GetWidth(b));l=n;p=
q;c=e-h;0<=c&&c<t&&(n++,++q>=i&&(q=0));for(;c<e+g;c++)l>o&&(L_ImageProcessGet(b,j[p],l),o=l),SumNxNSpatialFilter8(L_GetWidth(b),s,m,k,j[p],h,g,r,d),0<=c&&c<t&&(l++,++p>=i&&(p=0)),m+=i;DivNxNSpatialFilter8(L_GetWidth(b),k,f,a.fltDivisor,a.fltBias,d);L_ImageProcessPut(b,f,e)}}function DivNxNSpatialFilter8(b,a,c,d,e,h){var g,i,f,k,j;for(g=0;g<h;g++){j=g;f=a[g];k=0;for(i=b;i--;){switch(d){case 1:c[j]=Math.max(0,Math.min(255,f[k]+e));break;default:c[j]=Math.max(0,Math.min(255,f[k]/d+e))}k++;j+=h}}}
function SumNxNSpatialFilter8(b,a,c,d,e,h,g,i,f){var k,j,m={},l,o,n,p;for(k=0;k<f;k++){j=k;for(o=0;o<b;o++){l=c;p=j;n=o-h;for(0<=n&&n<i&&(j+=f);n<o+g;n++)m.value=d[k][n],CalcMatrixValue8(a[l],e[p],m),d[k][n]=m.value,l++,0<=n&&n<i&&(p+=f)}}}
function L_Spatial3x3FilterBitmap(b,a){var c,d,e,h=null,g=null,i=null,f=null,k,j={};if(!a.fltDivisor)throw Error("ERROR INV PARAMETER");d=3*L_GetWidth(b)+12;f=L_AllocateUint8Array(d);h=L_AllocateUint8Array(d);g=L_AllocateUint8Array(d);i=L_AllocateUint8Array(d);j.left=0;j.top=0;j.right=L_GetWidth(b);j.bottom=L_GetHeight(b);c=j.bottom-1;c!=L_GetHeight(b)-1&&c++;for(e=j.top;e<j.bottom;e++)e==j.top&&(0==e?(GetLine(b,h,L_GetWidth(b),e,3),L_CopyArray(h,g,d)):(GetLine(b,h,L_GetWidth(b),e-1,3),GetLine(b,
g,L_GetWidth(b),e,3))),GetLine(b,i,L_GetWidth(b),Math.min(e+1,c),3),Apply3x3SpatialFilter8(j,a,f,h,g,i,3,6),L_ImageProcessPut(b,f,e),k=h,h=g,g=i,i=k}
function Apply3x3SpatialFilter8(b,a,c,d,e,h,g,i){var f,k,j,m,l,o,n={};for(f=0;f<g;f++){j=g*b.left+f;m=g*b.left+f;l=g*b.left+f;o=g*b.left+f;for(k=b.right;k--!=b.left;){n.value=0;CalcMatrixValue8(a.fltMatrix[0],d[m],n);CalcMatrixValue8(a.fltMatrix[1],d[m+g],n);CalcMatrixValue8(a.fltMatrix[2],d[m+i],n);CalcMatrixValue8(a.fltMatrix[3],e[l],n);CalcMatrixValue8(a.fltMatrix[4],e[l+g],n);CalcMatrixValue8(a.fltMatrix[5],e[l+i],n);CalcMatrixValue8(a.fltMatrix[6],h[o],n);CalcMatrixValue8(a.fltMatrix[7],h[o+
g],n);CalcMatrixValue8(a.fltMatrix[8],h[o+i],n);switch(a.fltDivisor){case 1:c[j]=Math.max(0,Math.min(255,n.value+a.fltBias));break;default:c[j]=Math.max(0,Math.min(255,n.value/a.fltDivisor+a.fltBias))}m+=g;l+=g;o+=g;j+=g}}}function CalcMatrixValue8(b,a,c){switch(b){case -2:c.value-=a<<1;break;case -1:c.value-=a;break;case 0:break;case 1:c.value+=a;break;case 2:c.value+=a<<1;break;default:c.value+=b*a}}
function GetLine(b,a,c,d,e){L_ImageProcessGet(b,a,d,e);for(b=0;b<e;b++)a[b]=a[b+e];for(b=0;b<e;b++)a[b+e+c*e]=a[b+c*e]}function L_CopyArray(b,a,c){for(var d=0;d<c;d++)null!=b[d]&&(a[d]=b[d])}
Leadtools_ImageProcessing_Effects_SmoothEdges=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=b.amount,b=b.threshold;if(0>b||255<b)throw Error("ERROR_INV_PARAMETER");if(0>c||100<c)throw Error("ERROR_INV_PARAMETER");var d={};d.data=L_AllocateUint8Array(4*a.width*a.height);d.width=a.width;d.height=a.height;L_CopyBitmap(d,a);GaussianFilterBitmap(d,1,1,2);null!=_progressData&&(_progressData.start=51,
_progressData.end=100,_progressData.resultImageHeight=L_GetHeight(a));SmoothEdgesBitmap(a,d,c,b);_callback&&_callback({status:"Completed",imageData:a})};function SmoothEdgesBitmap(b,a,c,d){var e=null,h=null,g,i={},e=L_AllocateUint8Array(3*L_GetWidth(b)+12),h=L_AllocateUint8Array(3*L_GetWidth(b)+12);i.left=0;i.top=0;i.right=L_GetWidth(b);i.bottom=L_GetHeight(b);for(g=i.top;g<i.bottom;)L_ImageProcessGet(b,e,g),L_ImageProcessGet(a,h,g),Smooth_8(e,h,3,c,d,i),L_ImageProcessPut(b,e,g),g++}
function Smooth_8(b,a,c,d,e,h){var g,i,f,d=d/100;for(i=h.left*c;i<h.right*c;i++)g=b[i]-a[i],f=Math.abs(d*g)<=e?g=0:Math.abs(g)/g,g=parseInt(b[i]-d*g-f*e+0.5),b[i]=Math.max(0,Math.min(255,g))}
Leadtools_ImageProcessing_Effects_UnsharpMask=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;var c=b.radius,d=b.amount,e=b.threshold,b=b.colorType;0==b&&(b=1);var h=null,g=null,i=null,f=null,k={},j={};if(0>=c||0>d)throw Error("ERROR_INV_PARAMETER");if(2!=b&&1!=b)throw Error("ERROR_INV_PARAMETER");if(0>e||255<e)throw Error("ERROR_INV_PARAMETER");k.data=L_AllocateUint8Array(4*a.width*a.height);k.width=a.width;
k.height=a.height;L_CopyBitmap(k,a);GaussianFilterBitmap(k,c,b,2);null!=_progressData&&(_progressData.start=51,_progressData.end=100,_progressData.resultImageHeight=L_GetHeight(a));h=L_AllocateUint8Array(3*L_GetWidth(a)+12);g=L_AllocateUint8Array(3*L_GetWidth(a)+12);L_MEMSET(h,0,3*L_GetWidth(a)+12);L_MEMSET(g,0,3*L_GetWidth(a)+12);b&2&&(c=3*L_GetWidth(a),i=L_AllocateInt16Array(c),f=L_AllocateInt16Array(c),L_MEMSET(i,0,c),L_MEMSET(f,0,c));j.left=0;j.top=0;j.right=L_GetWidth(a);j.bottom=L_GetHeight(a);
for(c=j.top;c<j.bottom;)L_ImageProcessGet(a,h,c),L_ImageProcessGet(k,g,c),b&2?(RGB_YUV(h,i,3*L_GetWidth(a)),RGB_YUV(g,f,3*L_GetWidth(k)),Apply8YUV(i,f,3,d,e,j),YUV_RGB(h,i,3*L_GetWidth(a))):Apply8RGB(h,g,3,d,e,j),L_ImageProcessPut(a,h,c),c++;_callback&&_callback({status:"Completed",imageData:a})};function Apply8RGB(b,a,c,d,e,h){var g,i,f,d=d/100;for(i=h.left*c;i<h.right*c;i++)g=b[i]-a[i],f=Math.abs(d*g)<=e?g=0:Math.abs(g)/g,g=parseInt(b[i]+d*g-f*e+0.5),b[i]=Math.max(0,Math.min(255,g))}
function Apply8YUV(b,a,c,d,e,h){var g,i,f,k,j;g=c*h.left+2;i=c*h.left+2;d/=100;for(k=h.left;k<h.right;k++)f=b[g]-a[i],j=Math.abs(d*f)<=e?f=0:Math.abs(f)/f,f=parseInt(b[g]+d*f-j*e+0.5),b[g]=Math.max(0,Math.min(255,f)),g+=c,i+=c}function L_CopyBitmap(b,a){for(var c=0;c<4*a.width*a.height;c++)b.data[c]=a.data[c]}
Leadtools_ImageProcessing_Effects_GaussianFilter=function(b){var a=b.imageData;b.useProgress?(_progressData={start:0,end:100},_progressData.resultImageHeight=L_GetHeight(a)):_progressData=null;GaussianFilterBitmap(a,b.radius,1,1);_callback&&_callback({status:"Completed",imageData:a})};
function GaussianFilterBitmap(b,a,c,d){if(!a)throw Error("ERROR INV PARAMETER");if(!(c&2||c&1))throw Error("ERROR INV PARAMETER");0==d&&(d=1);_perspective="TOP_LEFT";null!=_progressData&&(_progressData.start=0,_progressData.end=50/d,_progressData.resultImageHeight=L_GetHeight(b));ApplyGaussianFilter(b,a,c);_perspective="LEFT_TOP";null!=_progressData&&(_progressData.start=50/d+1,_progressData.end=100/d,_progressData.resultImageHeight=L_GetHeight(b));ApplyGaussianFilter(b,a,c);_perspective="TOP_LEFT"}
function ApplyGaussianFilter(b,a,c){var d=Array(3);L_MEMSET(d,0,3);var e=null,h=null,g=null,i,f,k,j,m,l={};if(!a)throw Error("ERROR INV PARAMETER");if(!(c&2||c&1))throw Error("ERROR INV PARAMETER");g=(2*(a/10+1)+0.5)/3;e=2*parseInt(3*g)+1;a=e-1>>1;L_GetHeight(b);m=L_GetWidth(b)-1;e=L_AllocateUint16Array(e);i=CreateMask(e,g);if(-1==i)throw Error("ERROR NO MEMORY");g=L_AllocateUint8Array(3*L_GetWidth(b)+12);c&2&&(h=L_AllocateInt16Array(3*L_GetWidth(b)));f=L_GetWidth(b);for(k=0;3>k;k++)d[k]=L_AllocateInt32Array(f);
l.left=0;l.top=0;l.right=L_GetWidth(b);l.bottom=L_GetHeight(b);for(j=l.top;j<l.bottom;){for(k=0;3>k;k++)L_MEMSET(d[k],0,f);L_ImageProcessGet(b,g,j);c&2?(RGB_YUV(g,h,3*L_GetWidth(b)),AddLinesY(d,h,e,3,m,a,l),AverageLinesY(d,h,3,i,l),YUV_RGB(g,h,3*L_GetWidth(b))):(AddLines8(d,g,e,3,m,a,l),AverageLines8(d,g,3,i,l));L_ImageProcessPut(b,g,j);j++}}
function AverageLines8(b,a,c,d,e){var h,g,i,f;for(f=0;f<c;f++){g=f+e.left*c;h=b[f];var k=e.left;for(i=e.left;i<e.right;i++)a[g]=Math.max(0,Math.min(255,h[k]/d)),g+=c,k++}}function AverageLinesY(b,a,c,d,e){var h,g;h=0+(2+e.left*c);var b=b[2],i=e.left;for(g=e.left;g<e.right;g++)a[h]=Math.min(65535,parseInt(Math.max(0,Math.min(255,b[i]/d)))),h+=c,i++}
function AddLines8(b,a,c,d,e,h,g){var i,f,k,j,m,l,o,n,p,q,r;for(o=0;o<d;o++){i=b[o];var t=g.left;j=0;j+=o;for(n=g.left;n<g.right;){l=m=0;p=n-h;f=0<=p?j+p*d:j;q=n+h;k=q<e?j+q*d:j+e*d;for(r=0;r<h;r++)c[m]&&(l+=(a[f]+a[k])*c[m]),m++,0<=p&&(f+=d),q<=e&&(k-=d),p++,q--;l+=a[f]*c[m];i[t]=l;t++;n++}}}
function AddLinesY(b,a,c,d,e,h,g){var i,f,k,j,m,l,o,n,p,b=b[2],q=g.left;k=2;for(l=g.left;l<g.right;){m=j=0;o=l-h;i=0<=o?k+o*d:k;n=l+h;f=n<e?k+n*d:k+e*d;for(p=0;p<h;p++)c[j]&&(m+=(a[i]+a[f])*c[j]),j++,0<=o&&(i+=d),n<=e&&(f-=d),o++,n--;m+=a[i]*c[j];b[q]=m;q++;l++}}
function RGB_YUV(b,a,c){var d,e,h,g;d=c-c%3;for(c=0;c<d;c+=3)e=parseInt(9798*b[c+2]+19235*b[c+1]+3736*b[c]>>15),h=parseInt(16122*(b[c]-e)>>15),g=parseInt(25203*(b[c+2]-e)>>15),a[c]=Math.min(g,65535),a[c+1]=Math.min(h,65535),a[c+2]=Math.min(e,65535)}
function YUV_RGB(b,a,c){var d,e,h,g;d=c-c%3;for(c=0;c<d;c+=3)g=parseInt((-33*a[c]+66883*a[c+1]>>15)+a[c+2]),h=parseInt((-18940*a[c]+-12943*a[c+1]>>15)+a[c+2]),e=parseInt((37221*a[c]+-29*a[c+1]>>15)+a[c+2]),b[c]=Math.max(0,Math.min(255,g)),b[c+1]=Math.max(0,Math.min(255,h)),b[c+2]=Math.max(0,Math.min(255,e))}
function CreateMask(b,a){var c=null,d,e,h,g,i,f,k,j,m;h=2*parseInt(3*a)+1;g=parseInt(h/2);e=2*a*a;m=3*a;c=Array(h);for(i=g+1;i<h;i++){k=i-g-0.5;j=0;for(f=1;50>=f;f++)k+0.02*f<=m&&(d=(k+0.02*f)*(k+0.02*f),j+=Math.exp(-d/e));c[i]=j/50;c[h-i-1]=c[i]}for(f=j=0;50>=f;f++)d=(0.5+0.02*f)*(0.5+0.02*f),j+=Math.exp(-d/e);c[g]=j/51;for(i=j=0;i<g;i++)if(c[i]){j=c[i];break}for(i=0;i<h;i++)c[i]/=j;for(i=j=0;i<h;i++)b[i]=parseInt(c[i]+0.5),j+=b[i];return parseInt(j)}
function L_MEMSET(b,a,c){for(var d=0;d<c;d++)b[d]=a}function L_GetWidth(b){if("TOP_LEFT"==_perspective)return b.width;if("LEFT_TOP"==_perspective)return b.height}function L_GetHeight(b){if("TOP_LEFT"==_perspective)return b.height;if("LEFT_TOP"==_perspective)return b.width}
function L_ImageProcessGet(b,a,c,d){var e=0,d="undefined"===typeof d?0:d;if("TOP_LEFT"==_perspective)for(var h=4*b.width*c;h<4*b.width*(c+1);h+=4)a[e+d]=b.data[h+2],a[e+1+d]=b.data[h+1],a[e+2+d]=b.data[h],e+=3;else if("LEFT_TOP"==_perspective)for(h=0;h<b.height;h+=1)a[e+d]=b.data[4*h*b.width+4*c+2],a[e+1+d]=b.data[4*h*b.width+4*c+1],a[e+2+d]=b.data[4*h*b.width+4*c],e+=3}
function L_ImageProcessPut(b,a,c){var d=0;if("TOP_LEFT"==_perspective)for(var e=4*b.width*c;e<4*b.width*(c+1);e+=4)b.data[e+2]=a[d],b.data[e+1]=a[d+1],b.data[e]=a[d+2],d+=3;else if("LEFT_TOP"==_perspective)for(e=0;e<b.height;e+=1)b.data[4*e*b.width+4*c+2]=a[d],b.data[4*e*b.width+4*c+1]=a[d+1],b.data[4*e*b.width+4*c]=a[d+2],d+=3;null!=_progressData&&increaseProgress()}
function L_ImageProcessPutNoInc(b,a,c){var d=0;if("TOP_LEFT"==_perspective)for(var e=4*b.width*c;e<4*b.width*(c+1);e+=4)b.data[e+2]=a[d],b.data[e+1]=a[d+1],b.data[e]=a[d+2],d+=3;else if("LEFT_TOP"==_perspective)for(e=0;e<b.height;e+=1)b.data[4*e*b.width+4*c+2]=a[d],b.data[4*e*b.width+4*c+1]=a[d+1],b.data[4*e*b.width+4*c]=a[d+2],d+=3}function L_AllocateUint32Array(b){return array=void 0!=self.Uint32Array?new Uint32Array(b):Array(b)}
function L_AllocateUint32ArrayInit(b){if(void 0!=self.Uint32Array)array=new Uint32Array(b);else{array=Array(b);for(var a=0;a<b;a++)array[a]=0}return array}function L_AllocateInt32Array(b){return array=void 0!=self.Int32Array?new Int32Array(b):Array(b)}function L_AllocateInt32ArrayInit(b){if(void 0!=self.Int32Array)array=new Int32Array(b);else{array=Array(b);for(var a=0;a<b;a++)array[a]=0}return array}
function L_AllocateUint8Array(b){return array=void 0!=self.Uint8Array?new Uint8Array(b):Array(b)}function L_AllocateUint8ArrayInit(b){if(void 0!=self.Uint8Array)array=new Uint8Array(b);else{array=Array(b);for(var a=0;a<b;a++)array[a]=0}return array}function L_AllocateUint16Array(b){return array=void 0!=self.Uint16Array?new Uint16Array(b):Array(b)}
function L_AllocateUint16ArrayInit(b){if(void 0!=self.Uint16Array)array=new Uint16Array(b);else{array=Array(b);for(var a=0;a<b;a++)array[a]=0}return array}function L_AllocateInt16Array(b){return array=void 0!=self.Int16Array?new Int16Array(b):Array(b)}function L_AllocateInt16ArrayInit(b){if(void 0!=self.Int16Array)array=new Int16Array(b);else{array=Array(b);for(var a=0;a<b;a++)array[a]=0}return array};
